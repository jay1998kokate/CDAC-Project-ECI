{"ast":null,"code":"var _jsxFileName = \"E:\\\\CDAC Project ECI\\\\Front-End\\\\ECI Admin\\\\src\\\\Pages\\\\ElectionPages\\\\RegisterElection.js\",\n    _s = $RefreshSig$();\n\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { ElectionRegistrationInputs, url } from \"../../Common/Constant\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport RegistrationComponent from \"../../Components/RegistrationComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterElection() {\n  _s();\n\n  const history = useHistory();\n  const [failed, setFailed] = useState(null);\n  const schema = yup.object().shape({\n    electionName: yup.string().required(\"Please enter Election Name\"),\n    state: yup.string().required(\"Please enter  State\"),\n    year: yup.string().required(\"Please enter Election Year\"),\n    electionDate: yup.string().required(\"select Proper Date\"),\n    resultDate: yup.string().required(\"select Proper Date\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const registerElection = formData => {\n    console.log(\"Ajay\");\n    const data = {\n      electionName: formData.electionName,\n      state: formData.state,\n      year: formData.year,\n      electionDate: formData.electionDate,\n      resultDate: formData.resultDate\n    };\n    console.log(data);\n    axios.post(url + \"/election\", data).then(response => {\n      const result = response.data;\n\n      if (result.status == \"success\") {\n        document.getElementById(\"Election-Registration\").reset();\n        setFailed(false);\n      } else setFailed(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RegistrationComponent, {\n      errors: errors,\n      failed: failed,\n      handleSubmit: handleSubmit,\n      heading: \"Add Election\",\n      inputFields: ElectionRegistrationInputs,\n      registerFunction: registerElection,\n      register: register,\n      formId: \"Election-Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterElection, \"ZB3A4eq05oGstKbG4TuN6pJSoKA=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = RegisterElection;\nexport default RegisterElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterElection\");","map":{"version":3,"sources":["E:/CDAC Project ECI/Front-End/ECI Admin/src/Pages/ElectionPages/RegisterElection.js"],"names":["yup","useForm","yupResolver","axios","ElectionRegistrationInputs","url","useHistory","useState","RegistrationComponent","RegisterElection","history","failed","setFailed","schema","object","shape","electionName","string","required","state","year","electionDate","resultDate","register","handleSubmit","formState","errors","resolver","registerElection","formData","console","log","data","post","then","response","result","status","document","getElementById","reset"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,0BAAT,EAAqCC,GAArC,QAAgD,uBAAhD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMM,MAAM,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,YAAY,EAAEhB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,CADkB;AAEhCC,IAAAA,KAAK,EAAEnB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAFyB;AAGhCE,IAAAA,IAAI,EAAEpB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,CAH0B;AAIhCG,IAAAA,YAAY,EAAErB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,CAJkB;AAKhCI,IAAAA,UAAU,EAAEtB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB;AALoB,GAAnB,CAAf;AAQA,QAAM;AACJK,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFzB,OAAO,CAAC;AACV0B,IAAAA,QAAQ,EAAEzB,WAAW,CAACW,MAAD;AADX,GAAD,CAJX;;AAQA,QAAMe,gBAAgB,GAAIC,QAAD,IAAc;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMC,IAAI,GAAG;AACXhB,MAAAA,YAAY,EAAEa,QAAQ,CAACb,YADZ;AAEXG,MAAAA,KAAK,EAAEU,QAAQ,CAACV,KAFL;AAGXC,MAAAA,IAAI,EAAES,QAAQ,CAACT,IAHJ;AAIXC,MAAAA,YAAY,EAAEQ,QAAQ,CAACR,YAJZ;AAKXC,MAAAA,UAAU,EAAEO,QAAQ,CAACP;AALV,KAAb;AAOAQ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA7B,IAAAA,KAAK,CAAC8B,IAAN,CAAW5B,GAAG,GAAG,WAAjB,EAA8B2B,IAA9B,EAAoCE,IAApC,CAA0CC,QAAD,IAAc;AACrD,YAAMC,MAAM,GAAGD,QAAQ,CAACH,IAAxB;;AACA,UAAII,MAAM,CAACC,MAAP,IAAiB,SAArB,EAAgC;AAC9BC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAjD;AACA5B,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAHD,MAGOA,SAAS,CAAC,IAAD,CAAT;AACR,KAND;AAOD,GAjBD;;AAmBA,sBACE;AAAA,2BACE,QAAC,qBAAD;AACE,MAAA,MAAM,EAAEc,MADV;AAEE,MAAA,MAAM,EAAEf,MAFV;AAGE,MAAA,YAAY,EAAEa,YAHhB;AAIE,MAAA,OAAO,EAAE,cAJX;AAKE,MAAA,WAAW,EAAEpB,0BALf;AAME,MAAA,gBAAgB,EAAEwB,gBANpB;AAOE,MAAA,QAAQ,EAAEL,QAPZ;AAQE,MAAA,MAAM,EAAE;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtDQd,gB;UACSH,U,EAgBZL,O;;;KAjBGQ,gB;AAwDT,eAAeA,gBAAf","sourcesContent":["import * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport axios from \"axios\";\r\nimport { ElectionRegistrationInputs, url } from \"../../Common/Constant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport RegistrationComponent from \"../../Components/RegistrationComponent\";\r\n\r\nfunction RegisterElection() {\r\n  const history = useHistory();\r\n\r\n  const [failed, setFailed] = useState(null);\r\n\r\n  const schema = yup.object().shape({\r\n    electionName: yup.string().required(\"Please enter Election Name\"),\r\n    state: yup.string().required(\"Please enter  State\"),\r\n    year: yup.string().required(\"Please enter Election Year\"),\r\n    electionDate: yup.string().required(\"select Proper Date\"),\r\n    resultDate: yup.string().required(\"select Proper Date\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const registerElection = (formData) => {\r\n    console.log(\"Ajay\");\r\n    const data = {\r\n      electionName: formData.electionName,\r\n      state: formData.state,\r\n      year: formData.year,\r\n      electionDate: formData.electionDate,\r\n      resultDate: formData.resultDate,\r\n    };\r\n    console.log(data);\r\n    axios.post(url + \"/election\", data).then((response) => {\r\n      const result = response.data;\r\n      if (result.status == \"success\") {\r\n        document.getElementById(\"Election-Registration\").reset();\r\n        setFailed(false);\r\n      } else setFailed(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RegistrationComponent\r\n        errors={errors}\r\n        failed={failed}\r\n        handleSubmit={handleSubmit}\r\n        heading={\"Add Election\"}\r\n        inputFields={ElectionRegistrationInputs}\r\n        registerFunction={registerElection}\r\n        register={register}\r\n        formId={\"Election-Registration\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterElection;\r\n"]},"metadata":{},"sourceType":"module"}