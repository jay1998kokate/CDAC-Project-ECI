{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project FrontEnd\\\\ECI Admin\\\\src\\\\Pages\\\\AssemblyPages\\\\AssemblyList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AssemblyRow from \"../../Components/UIComponents/AssemblyComponents/AssemblyRow\"; // import { url } from \"../../src/Common/Constant\";\n\nimport { url } from \"../../Common/Constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AssemblyList() {\n  _s();\n\n  const [assemblies, setAssemblies] = useState([]);\n  const [assemblyId, setAssemblyId] = useState(0);\n  const [assemblyName, setAssemblyName] = useState(\"\");\n  const [showById, setShowById] = useState(false);\n  const [showByName, setShowByName] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    if (location.state == undefined) getAllAssemblies();else {\n      setAssemblies(location.state.assemblyInfo);\n    }\n  }, []);\n\n  const onIdClick = () => {\n    setShowById(true);\n    setShowByName(false);\n  };\n\n  const onNameClick = () => {\n    setShowById(false);\n    setShowByName(true);\n  };\n\n  const getAllAssemblies = () => {\n    axios.get(url + \"/assemblyInfo/assembly\").then(response => {\n      const result = response.data;\n      setAssemblies(result.data);\n    });\n  };\n\n  const getAssembly = () => {\n    let apiUrl = \"\";\n    if (showById) apiUrl = url + \"/assemblyInfo/assembly/\" + assemblyId;else if (showByName) apiUrl = url + \"/assemblyInfo/assemblyName/\" + assemblyName;\n    axios.get(apiUrl).then(response => {\n      const result = response.data;\n      const assemblies = [];\n      assemblies.push(result.data);\n      setAssemblies(assemblies);\n    });\n  };\n\n  const deleteRow = assemblyId => {\n    axios.delete(url + \"/assemblyInfo/delete/\" + assemblyId).then(response => {\n      const result = response.data;\n\n      if (result.status == \"success\") {\n        setAssemblies(assemblies.filter(assembly => assembly.assemblyId != assemblyId));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"List Of Assemblies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: onIdClick,\n        children: \"View By Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: onNameClick,\n        children: \"View By Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: [showById && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter Assembly Id\",\n          onChange: e => {\n            setAssemblyId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), showByName && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Assembly Name\",\n          onChange: e => {\n            setAssemblyName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: (showById || showByName) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: getAssembly,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assembly Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assembly Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: assemblies.map(assembly => {\n          return /*#__PURE__*/_jsxDEV(AssemblyRow, {\n            assembly: assembly,\n            deleteFunction: deleteRow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AssemblyList, \"QG4NEJvp5ZusDEEnXzzsxe6XL0k=\", false, function () {\n  return [useLocation];\n});\n\n_c = AssemblyList;\nexport default AssemblyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssemblyList\");","map":{"version":3,"sources":["F:/Project FrontEnd/ECI Admin/src/Pages/AssemblyPages/AssemblyList.js"],"names":["useState","useEffect","useLocation","axios","AssemblyRow","url","AssemblyList","assemblies","setAssemblies","assemblyId","setAssemblyId","assemblyName","setAssemblyName","showById","setShowById","showByName","setShowByName","location","state","undefined","getAllAssemblies","assemblyInfo","onIdClick","onNameClick","get","then","response","result","data","getAssembly","apiUrl","push","deleteRow","delete","status","filter","assembly","e","target","value","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport AssemblyRow from \"../../Components/UIComponents/AssemblyComponents/AssemblyRow\";\r\n// import { url } from \"../../src/Common/Constant\";\r\nimport { url } from \"../../Common/Constant\";\r\n\r\n\r\nfunction AssemblyList() {\r\n  const [assemblies, setAssemblies] = useState([]);\r\n\r\n  const [assemblyId, setAssemblyId] = useState(0);\r\n  const [assemblyName, setAssemblyName] = useState(\"\");\r\n\r\n  const [showById, setShowById] = useState(false);\r\n  const [showByName, setShowByName] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.state == undefined) getAllAssemblies();\r\n    else {\r\n      setAssemblies(location.state.assemblyInfo);\r\n    }\r\n  }, []);\r\n\r\n  const onIdClick = () => {\r\n    setShowById(true);\r\n    setShowByName(false);\r\n  };\r\n\r\n  const onNameClick = () => {\r\n    setShowById(false);\r\n    setShowByName(true);\r\n  };\r\n\r\n  const getAllAssemblies = () => {\r\n    axios.get(url + \"/assemblyInfo/assembly\").then((response) => {\r\n      const result = response.data;\r\n      setAssemblies(result.data);\r\n    });\r\n  };\r\n\r\n  const getAssembly = () => {\r\n    let apiUrl = \"\";\r\n    if (showById) apiUrl = url + \"/assemblyInfo/assembly/\" + assemblyId;\r\n    else if (showByName)\r\n      apiUrl = url + \"/assemblyInfo/assemblyName/\" + assemblyName;\r\n\r\n    axios.get(apiUrl).then((response) => {\r\n      const result = response.data;\r\n      const assemblies = [];\r\n      assemblies.push(result.data);\r\n      setAssemblies(assemblies);\r\n    });\r\n  };\r\n\r\n  const deleteRow = (assemblyId) => {\r\n    axios\r\n      .delete(url + \"/assemblyInfo/delete/\" + assemblyId)\r\n      .then((response) => {\r\n        const result = response.data;\r\n        if (result.status == \"success\") {\r\n          setAssemblies(\r\n            assemblies.filter((assembly) => assembly.assemblyId != assemblyId)\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"page-title\">List Of Assemblies</h1>\r\n      <div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={onIdClick}>\r\n          View By Id\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={onNameClick}>\r\n          View By Name\r\n        </button>\r\n      </div>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          {showById && (\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Enter Assembly Id\"\r\n              onChange={(e) => {\r\n                setAssemblyId(e.target.value);\r\n              }}\r\n            />\r\n          )}\r\n          {showByName && (\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Assembly Name\"\r\n              onChange={(e) => {\r\n                setAssemblyName(e.target.value);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"col-2\">\r\n          {(showById || showByName) && (\r\n            <button className=\"btn btn-success\" onClick={getAssembly}>\r\n              Search\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Assembly Id</th>\r\n            <th>Assembly Name</th>\r\n            <th>District</th>\r\n            <th>State</th>\r\n            <th>Notation</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {assemblies.map((assembly) => {\r\n            return (\r\n              <AssemblyRow assembly={assembly} deleteFunction={deleteRow} />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssemblyList;\r\n"]},"metadata":{},"sourceType":"module"}