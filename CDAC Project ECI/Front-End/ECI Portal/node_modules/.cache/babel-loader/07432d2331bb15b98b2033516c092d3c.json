{"ast":null,"code":"var _jsxFileName = \"D:\\\\ECI Project\\\\ECI Portal\\\\src\\\\Pages\\\\CandidatePages\\\\RegisterParliamentCandidatePage.js\",\n    _s = $RefreshSig$();\n\nimport { RegisterCandidateParliament } from \"../../Common/Constant\";\nimport RegistrationComponent from \"./../../Components/UIComponents/RegistrationComponent\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { url } from \"./../../Common/Constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterParliamentCandidatePage() {\n  _s();\n\n  const schema = yup.object().shape({\n    voterId: yup.string().required(\"Please enter voter id\"),\n    parliamentId: yup.string().required(\"Please enter parliament id\"),\n    politicalParyId: yup.string().required(\"Please enter political party id\"),\n    electionId: yup.string().required(\"Please enter election id\"),\n    criminalDetails: yup.string().required(\"Please enter criminal details\"),\n    incomeDetails: yup.string().required(\"Please enter income details\")\n  });\n  const [failed, setFailed] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const registerCandidate = formData => {\n    const data = {\n      parliamentId: formData.parliamentId,\n      politicalParyId: formData.politicalParyId,\n      electionId: formData.electionId,\n      criminalDetails: formData.criminalDetails,\n      incomeDetails: formData.incomeDetails,\n      voterId: formData.voterId\n    };\n    console.log(data);\n    axios.post(url + \"/parliamentCandidate/register\", data).then(response => {\n      const result = response.data;\n\n      if (result.status == \"success\") {\n        setFailed(false);\n        document.getElementById(\"candidate-registration\").reset();\n      } else setFailed(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RegistrationComponent, {\n      errors: errors,\n      failed: failed,\n      handleSubmit: handleSubmit,\n      heading: \"Candidate Registration\",\n      inputFields: RegisterCandidateParliament,\n      registerFunction: registerCandidate,\n      register: register,\n      formId: \"candidate-registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterParliamentCandidatePage, \"DTPwFTauHBqrekXJCq/Pg/sZEy0=\", false, function () {\n  return [useForm];\n});\n\n_c = RegisterParliamentCandidatePage;\nexport default RegisterParliamentCandidatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterParliamentCandidatePage\");","map":{"version":3,"sources":["D:/ECI Project/ECI Portal/src/Pages/CandidatePages/RegisterParliamentCandidatePage.js"],"names":["RegisterCandidateParliament","RegistrationComponent","useForm","yup","yupResolver","useState","axios","url","RegisterParliamentCandidatePage","schema","object","shape","voterId","string","required","parliamentId","politicalParyId","electionId","criminalDetails","incomeDetails","failed","setFailed","register","handleSubmit","formState","errors","resolver","registerCandidate","formData","data","console","log","post","then","response","result","status","document","getElementById","reset"],"mappings":"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","sourcesContent":["import { RegisterCandidateParliament } from \"../../Common/Constant\";\r\nimport RegistrationComponent from \"./../../Components/UIComponents/RegistrationComponent\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url } from \"./../../Common/Constant\";\r\n\r\nfunction RegisterParliamentCandidatePage() {\r\n  const schema = yup.object().shape({\r\n    voterId: yup.string().required(\"Please enter voter id\"),\r\n    parliamentId: yup.string().required(\"Please enter parliament id\"),\r\n    politicalParyId: yup.string().required(\"Please enter political party id\"),\r\n    electionId: yup.string().required(\"Please enter election id\"),\r\n    criminalDetails: yup.string().required(\"Please enter criminal details\"),\r\n    incomeDetails: yup.string().required(\"Please enter income details\"),\r\n  });\r\n\r\n  const [failed, setFailed] = useState(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const registerCandidate = (formData) => {\r\n    const data = {\r\n      parliamentId: formData.parliamentId,\r\n      politicalParyId: formData.politicalParyId,\r\n      electionId: formData.electionId,\r\n      criminalDetails: formData.criminalDetails,\r\n      incomeDetails: formData.incomeDetails,\r\n      voterId: formData.voterId,\r\n    };\r\n    console.log(data);\r\n    axios.post(url + \"/parliamentCandidate/register\", data).then((response) => {\r\n      const result = response.data;\r\n      if (result.status == \"success\") {\r\n        setFailed(false);\r\n        document.getElementById(\"candidate-registration\").reset();\r\n      } else setFailed(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RegistrationComponent\r\n        errors={errors}\r\n        failed={failed}\r\n        handleSubmit={handleSubmit}\r\n        heading={\"Candidate Registration\"}\r\n        inputFields={RegisterCandidateParliament}\r\n        registerFunction={registerCandidate}\r\n        register={register}\r\n        formId={\"candidate-registration\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterParliamentCandidatePage;\r\n"]},"metadata":{},"sourceType":"module"}