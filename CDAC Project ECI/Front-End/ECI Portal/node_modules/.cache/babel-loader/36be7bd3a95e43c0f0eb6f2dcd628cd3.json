{"ast":null,"code":"var _jsxFileName = \"E:\\\\ECI Portal\\\\src\\\\Pages\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { forgotPasswordInputs, url } from \"./../Common/Constant\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport LoginFooter from \"./../Components/UIComponents/LoginFooter\";\nimport LoginSideImage from \"./../Components/UIComponents/LoginSideImage\";\nimport LoginMainComponent from \"./../Components/UIComponents/LoginMainComponent\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPassword() {\n  _s();\n\n  const history = useHistory();\n  const schema = yup.object().shape({\n    email: yup.string().required(\"Please enter email address\").email(),\n    password: yup.string().required(\"Please enter password\").min(6),\n    confirmPassword: yup.string().required(\"Please confirm password\").min(6)\n  });\n  const [failed, setfailed] = useState(false);\n  const [incorrectPassword, setIncorrectPassword] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const changePassword = formData => {\n    if (formData.password == formData.confirmPassword) {\n      const data = {\n        email: formData.email,\n        password: formData.password\n      };\n      axios.post(url + \"/user/forgotPassword\", data).then(response => {\n        const result = response.data;\n        console.log(result.data);\n\n        if (result.data != \"Enter valid emailId\") {\n          history.push(\"/signin\");\n        } else setfailed(true);\n      });\n    } else setIncorrectPassword(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginMainComponent, {\n      errors: errors,\n      handleSubmit: handleSubmit,\n      heading: \"Forgot Password\",\n      formInputs: forgotPasswordInputs,\n      register: register,\n      submitFunction: changePassword,\n      failed: failed,\n      incorrectPassword: incorrectPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"mYdx7iaRNbYJckH+o69unrG4dl4=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["E:/ECI Portal/src/Pages/ForgotPassword.js"],"names":["useState","axios","forgotPasswordInputs","url","useHistory","Link","LoginFooter","LoginSideImage","LoginMainComponent","useForm","yup","yupResolver","ForgotPassword","history","schema","object","shape","email","string","required","password","min","confirmPassword","failed","setfailed","incorrectPassword","setIncorrectPassword","register","handleSubmit","formState","errors","resolver","changePassword","formData","data","post","then","response","result","console","log","push"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,GAA/B,QAA0C,sBAA1C;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AAEA,QAAMU,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,EAAoDF,KAApD,EADyB;AAEhCG,IAAAA,QAAQ,EAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,EAA+CE,GAA/C,CAAmD,CAAnD,CAFsB;AAGhCC,IAAAA,eAAe,EAAEZ,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EAAiDE,GAAjD,CAAqD,CAArD;AAHe,GAAnB,CAAf;AAMA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACyB,iBAAD,EAAoBC,oBAApB,IAA4C1B,QAAQ,CAAC,KAAD,CAA1D;AAEA,QAAM;AACJ2B,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFrB,OAAO,CAAC;AACVsB,IAAAA,QAAQ,EAAEpB,WAAW,CAACG,MAAD;AADX,GAAD,CAJX;;AAQA,QAAMkB,cAAc,GAAIC,QAAD,IAAc;AACnC,QAAIA,QAAQ,CAACb,QAAT,IAAqBa,QAAQ,CAACX,eAAlC,EAAmD;AACjD,YAAMY,IAAI,GAAG;AACXjB,QAAAA,KAAK,EAAEgB,QAAQ,CAAChB,KADL;AAEXG,QAAAA,QAAQ,EAAEa,QAAQ,CAACb;AAFR,OAAb;AAIAnB,MAAAA,KAAK,CAACkC,IAAN,CAAWhC,GAAG,GAAG,sBAAjB,EAAyC+B,IAAzC,EAA+CE,IAA/C,CAAqDC,QAAD,IAAc;AAChE,cAAMC,MAAM,GAAGD,QAAQ,CAACH,IAAxB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACJ,IAAnB;;AACA,YAAII,MAAM,CAACJ,IAAP,IAAe,qBAAnB,EAA0C;AACxCrB,UAAAA,OAAO,CAAC4B,IAAR,CAAa,SAAb;AACD,SAFD,MAEOjB,SAAS,CAAC,IAAD,CAAT;AACR,OAND;AAOD,KAZD,MAYOE,oBAAoB,CAAC,IAAD,CAApB;AACR,GAdD;;AAgBA,sBACE;AAAA,2BACE,QAAC,kBAAD;AACE,MAAA,MAAM,EAAEI,MADV;AAEE,MAAA,YAAY,EAAEF,YAFhB;AAGE,MAAA,OAAO,EAAE,iBAHX;AAIE,MAAA,UAAU,EAAE1B,oBAJd;AAKE,MAAA,QAAQ,EAAEyB,QALZ;AAME,MAAA,cAAc,EAAEK,cANlB;AAOE,MAAA,MAAM,EAAET,MAPV;AAQE,MAAA,iBAAiB,EAAEE;AARrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlDQb,c;UACSR,U,EAeZK,O;;;KAhBGG,c;AAoDT,eAAeA,cAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { forgotPasswordInputs, url } from \"./../Common/Constant\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport LoginFooter from \"./../Components/UIComponents/LoginFooter\";\r\nimport LoginSideImage from \"./../Components/UIComponents/LoginSideImage\";\r\nimport LoginMainComponent from \"./../Components/UIComponents/LoginMainComponent\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory();\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup.string().required(\"Please enter email address\").email(),\r\n    password: yup.string().required(\"Please enter password\").min(6),\r\n    confirmPassword: yup.string().required(\"Please confirm password\").min(6),\r\n  });\r\n\r\n  const [failed, setfailed] = useState(false);\r\n  const [incorrectPassword, setIncorrectPassword] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const changePassword = (formData) => {\r\n    if (formData.password == formData.confirmPassword) {\r\n      const data = {\r\n        email: formData.email,\r\n        password: formData.password,\r\n      };\r\n      axios.post(url + \"/user/forgotPassword\", data).then((response) => {\r\n        const result = response.data;\r\n        console.log(result.data);\r\n        if (result.data != \"Enter valid emailId\") {\r\n          history.push(\"/signin\");\r\n        } else setfailed(true);\r\n      });\r\n    } else setIncorrectPassword(true);\r\n  };\r\n\r\n  return (  \r\n    <div>\r\n      <LoginMainComponent\r\n        errors={errors}\r\n        handleSubmit={handleSubmit}\r\n        heading={\"Forgot Password\"}\r\n        formInputs={forgotPasswordInputs}\r\n        register={register}\r\n        submitFunction={changePassword}\r\n        failed={failed}\r\n        incorrectPassword={incorrectPassword}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}